// Code generated by "genenum.exe -typesize=uint16 -typename=NotificationID -packagename=notificationid -basedir=enum -vectortype=int"

package notificationid

import "fmt"

type NotificationID uint16

const (
	Invalid NotificationID = iota // make empty packet error
	//

	NotificationID_Count int = iota
)

var _NotificationID2string = [NotificationID_Count][2]string{
	Invalid: {"Invalid", "make empty packet error"},
}

func (e NotificationID) String() string {
	if e >= 0 && e < NotificationID(NotificationID_Count) {
		return _NotificationID2string[e][0]
	}
	return fmt.Sprintf("NotificationID%d", uint8(e))
}

func (e NotificationID) CommentString() string {
	if e >= 0 && e < NotificationID(NotificationID_Count) {
		return _NotificationID2string[e][1]
	}
	return ""
}

var _string2NotificationID = map[string]NotificationID{
	"Invalid": Invalid,
}

func String2NotificationID(s string) (NotificationID, bool) {
	v, b := _string2NotificationID[s]
	return v, b
}
