// Code generated by "genenum.exe -typesize=uint16 -typename=ResultCode -packagename=resultcode -basedir=enum -vectortype=int"

package resultcode

import "fmt"

type ResultCode uint16

const (
	None ResultCode = iota // or success
	//

	ResultCode_Count int = iota
)

var _ResultCode2string = [ResultCode_Count][2]string{
	None: {"None", "or success"},
}

func (e ResultCode) String() string {
	if e >= 0 && e < ResultCode(ResultCode_Count) {
		return _ResultCode2string[e][0]
	}
	return fmt.Sprintf("ResultCode%d", uint8(e))
}

func (e ResultCode) CommentString() string {
	if e >= 0 && e < ResultCode(ResultCode_Count) {
		return _ResultCode2string[e][1]
	}
	return ""
}

var _string2ResultCode = map[string]ResultCode{
	"None": None,
}

func String2ResultCode(s string) (ResultCode, bool) {
	v, b := _string2ResultCode[s]
	return v, b
}
